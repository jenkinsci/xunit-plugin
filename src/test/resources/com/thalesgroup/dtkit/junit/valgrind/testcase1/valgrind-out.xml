<?xml version="1.0" encoding="UTF-8"?>
<valgrindoutput>

    <protocolversion>4</protocolversion>
    <protocoltool>memcheck</protocoltool>

    <preamble>
        <line>Memcheck, a memory error detector</line>
        <line>Copyright (C) 2002-2010, and GNU GPL'd, by Julian Seward et al.</line>
        <line>Using Valgrind-3.6.0 and LibVEX; rerun with -h for copyright info</line>
        <line>Command: ./a.out</line>
    </preamble>

    <pid>18559</pid>
    <ppid>18472</ppid>
    <tool>memcheck</tool>

    <args>
        <vargv>
            <exe>/opt/local/bin/valgrind</exe>
            <arg>--xml=yes</arg>
            <arg>--xml-file=valgrind-out.xml</arg>
        </vargv>
        <argv>
            <exe>./a.out</exe>
        </argv>
    </args>

    <status>
        <state>RUNNING</state>
        <time>00:00:00:00.008</time>
    </status>

    <error>
        <unique>0x0</unique>
        <tid>1</tid>
        <kind>UninitCondition</kind>
        <what>Conditional jump or move depends on uninitialised value(s)</what>
        <stack>
            <frame>
                <ip>0x100011C2F</ip>
                <obj>/opt/local/lib/valgrind/vgpreload_memcheck-amd64-darwin.so</obj>
                <fn>memchr</fn>
                <dir>
                    /opt/local/var/macports/build/_opt_local_var_macports_sources_rsync.macports.org_release_ports_devel_valgrind/work/valgrind-3.6.0/memcheck
                </dir>
                <file>mc_replace_strmem.c</file>
                <line>446</line>
            </frame>
            <frame>
                <ip>0x100114346</ip>
                <obj>/usr/lib/libSystem.B.dylib</obj>
                <fn>__sfvwrite</fn>
            </frame>
            <frame>
                <ip>0x100165854</ip>
                <obj>/usr/lib/libSystem.B.dylib</obj>
                <fn>fwrite</fn>
            </frame>
            <frame>
                <ip>0x10004EAE3</ip>
                <obj>/usr/lib/libstdc++.6.0.9.dylib</obj>
                <fn>void std::__ostream_write&lt;char, std::char_traits&lt;char&gt; &gt;(std::basic_ostream&lt;char,
                    std::char_traits&lt;char&gt; &gt;&amp;, char const*, long)
                </fn>
            </frame>
            <frame>
                <ip>0x10004CB97</ip>
                <obj>/usr/lib/libstdc++.6.0.9.dylib</obj>
                <fn>std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::__ostream_insert&lt;char,
                    std::char_traits&lt;char&gt; &gt;(std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp;,
                    char const*, long)
                </fn>
            </frame>
            <frame>
                <ip>0x10004CC93</ip>
                <obj>/usr/lib/libstdc++.6.0.9.dylib</obj>
                <fn>std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::operator&lt;&lt; &lt;std::char_traits&lt;char&gt;
                    &gt;(std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp;, char)
                </fn>
            </frame>
            <frame>
                <ip>0x100000D12</ip>
                <obj>./a.out</obj>
                <fn>main</fn>
            </frame>
        </stack>
    </error>

    <error>
        <unique>0x1</unique>
        <tid>1</tid>
        <kind>SyscallParam</kind>
        <what>Syscall param write(buf) points to uninitialised byte(s)</what>
        <stack>
            <frame>
                <ip>0x1001521E2</ip>
                <obj>/usr/lib/libSystem.B.dylib</obj>
                <fn>write$NOCANCEL</fn>
            </frame>
            <frame>
                <ip>0x10015215C</ip>
                <obj>/usr/lib/libSystem.B.dylib</obj>
                <fn>_swrite</fn>
            </frame>
            <frame>
                <ip>0x1001520A1</ip>
                <obj>/usr/lib/libSystem.B.dylib</obj>
                <fn>__sflush</fn>
            </frame>
            <frame>
                <ip>0x1001568C0</ip>
                <obj>/usr/lib/libSystem.B.dylib</obj>
                <fn>__swbuf</fn>
            </frame>
            <frame>
                <ip>0x100189D8E</ip>
                <obj>/usr/lib/libSystem.B.dylib</obj>
                <fn>putc</fn>
            </frame>
            <frame>
                <ip>0x10004CA18</ip>
                <obj>/usr/lib/libstdc++.6.0.9.dylib</obj>
                <fn>std::ostream::put(char)</fn>
            </frame>
            <frame>
                <ip>0x10004CAC6</ip>
                <obj>/usr/lib/libstdc++.6.0.9.dylib</obj>
                <fn>std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::endl&lt;char,
                    std::char_traits&lt;char&gt; &gt;(std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp;)
                </fn>
            </frame>
            <frame>
                <ip>0x100000D21</ip>
                <obj>./a.out</obj>
                <fn>main</fn>
            </frame>
        </stack>
        <auxwhat>Address 0x10035a0e3 is 3 bytes inside a block of size 4,096 alloc'd</auxwhat>
        <stack>
            <frame>
                <ip>0x10001079F</ip>
                <obj>/opt/local/lib/valgrind/vgpreload_memcheck-amd64-darwin.so</obj>
                <fn>malloc</fn>
                <dir>
                    /opt/local/var/macports/build/_opt_local_var_macports_sources_rsync.macports.org_release_ports_devel_valgrind/work/valgrind-3.6.0/coregrind/m_replacemalloc
                </dir>
                <file>vg_replace_malloc.c</file>
                <line>236</line>
            </frame>
            <frame>
                <ip>0x100151F4D</ip>
                <obj>/usr/lib/libSystem.B.dylib</obj>
                <fn>__smakebuf</fn>
            </frame>
            <frame>
                <ip>0x100151EB9</ip>
                <obj>/usr/lib/libSystem.B.dylib</obj>
                <fn>__swsetup</fn>
            </frame>
            <frame>
                <ip>0x100114128</ip>
                <obj>/usr/lib/libSystem.B.dylib</obj>
                <fn>__sfvwrite</fn>
            </frame>
            <frame>
                <ip>0x100165854</ip>
                <obj>/usr/lib/libSystem.B.dylib</obj>
                <fn>fwrite</fn>
            </frame>
            <frame>
                <ip>0x10004EAE3</ip>
                <obj>/usr/lib/libstdc++.6.0.9.dylib</obj>
                <fn>void std::__ostream_write&lt;char, std::char_traits&lt;char&gt; &gt;(std::basic_ostream&lt;char,
                    std::char_traits&lt;char&gt; &gt;&amp;, char const*, long)
                </fn>
            </frame>
            <frame>
                <ip>0x10004CB97</ip>
                <obj>/usr/lib/libstdc++.6.0.9.dylib</obj>
                <fn>std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::__ostream_insert&lt;char,
                    std::char_traits&lt;char&gt; &gt;(std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp;,
                    char const*, long)
                </fn>
            </frame>
            <frame>
                <ip>0x10004CC57</ip>
                <obj>/usr/lib/libstdc++.6.0.9.dylib</obj>
                <fn>std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::operator&lt;&lt; &lt;std::char_traits&lt;char&gt;
                    &gt;(std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp;, char const*)
                </fn>
            </frame>
            <frame>
                <ip>0x100000D08</ip>
                <obj>./a.out</obj>
                <fn>main</fn>
            </frame>
        </stack>
    </error>


    <status>
        <state>FINISHED</state>
        <time>00:00:00:00.546</time>
    </status>

    <errorcounts>
        <pair>
            <count>1</count>
            <unique>0x1</unique>
        </pair>
        <pair>
            <count>1</count>
            <unique>0x0</unique>
        </pair>
    </errorcounts>

    <suppcounts>
    </suppcounts>

</valgrindoutput>

